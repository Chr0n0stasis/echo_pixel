name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  android:
    name: Build Android APKs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install dependencies
        run: flutter pub get
      - name: Build Android APKs
        env:
          KEYSTORE: ${{ secrets.ANDROID_JKS }}
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_JKS_PASSWD }}
          KEY_ALIAS: ${{ secrets.ANDROID_JKS_ALIAS }}
          KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_JKS_PASSWD }}
        run: |
          export KEYSTORE_PATH="$RUNNER_TEMP/keystore.jks"
          cat $KEYSTORE | base64 -d > "$KEYSTORE_PATH"
          ex
          flutter build apk --release --target-platform android-arm,android-arm64,android-x64 --split-per-abi
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: |
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk

  windows:
    name: Build Windows App
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install dependencies
        run: flutter pub get
      - name: Build Windows desktop
        run: flutter build windows --release
      - name: Package Msix
        env:
          PFX_BASE64: ${{ secrets.WINDOWS_CEF }}
          PFX_PASSWD: ${{ secrets.WINDOWS_CEF_PASSWD }}
        run: |
          $certPath = Join-Path $env:RUNNER_TEMP 'signing.pfx'
          [IO.File]::WriteAllBytes(
            $certPath,
            [Convert]::FromBase64String($env:PFX_BASE64)
          )
          Write-Host "Decoded certificate written to $certPath"
          $password = ConvertTo-SecureString -String $env:PFX_PASSWD -Force -AsPlainText
          Import-PfxCertificate -CertStoreLocation "Cert:\LocalMachine\TrustedPeople" -Password $password -FilePath $certPath
          dart run msix:create --build-windows false --certificate-path "$certPath" --certificate-password "$env:PFX_PASSWD" --release
      - name: Upload Windows artifact(zip package)
        uses: actions/upload-artifact@v4
        with:
          name: EchoPixel-Windows
          path: build\windows\x64\runner\Release
      - name: Upload Windows artifact(msix package)
        uses: actions/upload-artifact@v4
        with:
          name: EchoPixel-Windows-MSIX
          path: build\windows\x64\runner\Release\echo_pixel.msix

  macos:
    name: Build macOS App
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install dependencies
        run: flutter pub get
      - name: Build macOS desktop
        run: flutter build macos --release
      - name: Zip macOS .app bundle
        run: |
          cd build/macos/Build/Products/Release
          zip -r EchoPixel-macos.zip EchoPixel.app
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: build/macos/Build/Products/Release
